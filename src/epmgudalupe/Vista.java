/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package epmgudalupe;

import epmgudalupe.partes.arranque.AbrirValvulaEsferica;
import epmgudalupe.partes.arranque.BombaRefrigeracion;
import epmgudalupe.partes.arranque.Desaplicarfrenos;
import epmgudalupe.partes.arranque.JuntaInflable;
import epmgudalupe.partes.arranque.LubricacionForzadaOn;
import epmgudalupe.partes.arranque.ReguladorDesbloqueado;
import epmgudalupe.partes.arranque.ReguladorEnergizado;
import epmgudalupe.partes.arranque.ValvulaAlivio;
import epmgudalupe.partes.arranque.ValvulaAislamiento;
import epmgudalupe.partes.arranque.VelocidadM90;
import epmgudalupe.partes.arranque.filtroAplicado;
import java.awt.Color;
import static java.awt.Color.black;
import static java.awt.Color.green;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.Rectangle;
import java.io.File;
import java.io.IOException;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JButton;



/**
 *
 * @author lzambrs
 */
public class Vista extends javax.swing.JFrame {
       private Point location1,location2,location3,location4,location5,location6,location7,location8,location9,location10,location11,location12;
          Color color;
         
          private Point p;
    private Point pl;
    private int lx,ly;
    boolean calcular_diferencia=true;
     Point loc;
     int contgeneral=0;
     int num=0;
     int [] ubica=new int [12];
     boolean superbande=false;
     

    /**
     * Creates new form Vista
     */
    public Vista() {
        initComponents();    
        ubica[0]=100;
        ubica[1]=150;
        ubica[2]=200;
        ubica[3]=250;
        ubica[4]=300;
        ubica[5]=350;
        ubica[6]=400;
        ubica[7]=450;
        ubica[8]=500;
        ubica[9]=550;
        ubica[10]=600;
        ubica[11]=650;   
        color = boton1.getBackground();
        boton1.setEnabled(false);
        boton2.setEnabled(false);
        boton3.setEnabled(false);
        boton4.setEnabled(false);
        boton5.setEnabled(false);
        boton6.setEnabled(false);
        boton7.setEnabled(false);
        boton8.setEnabled(false);
        boton9.setEnabled(false);
        boton10.setEnabled(false);
        boton11.setEnabled(false);
        boton12.setEnabled(false);     
    }
    //crea numeros aleatorios para poner los botones en diferentes posiciones
    public static Stack<Integer> generaNumeroAleatorio(int minimo,int maximo){
        int pos;
    int nCartas = 12;
         Stack < Integer > pCartas = new Stack < Integer > ();
    for (int i = 0; i < nCartas ; i++) {
      pos = (int) Math.floor(Math.random() * nCartas );
      while (pCartas.contains(pos)) {
        pos = (int) Math.floor(Math.random() * nCartas );
      }
      pCartas.push(pos);
    }
           return pCartas;
   }

    //metodo para ajustar el boton en el label indicado en la izquierda
     public int[] tamañoIz(javax.swing.JLabel label){
    int posmenorx,posmayorx;
    int posmenory,posmayory;
    
    Rectangle a = label.getBounds();
    int [] tamaño=new int[4];
    
    posmenorx=a.x;
    posmayorx=a.x+40;
    posmenory=a.y+10;
    posmayory=a.y+40;
    tamaño[0]=posmenorx;
    tamaño[1]=posmayorx;
    tamaño[2]=posmenory;
    tamaño[3]=posmayory;
    return tamaño;
    
    }
    //metodo para ajustar el boton en el label indicado en la izquierda
     public int[] tamaño(javax.swing.JLabel label){
    int posmenorx,posmayorx;
    int posmenory,posmayory;
    
    Rectangle a = label.getBounds();
    int [] tamaño=new int[4];
    
    posmenorx=a.x;
    posmayorx=a.x+40;
    posmenory=a.y+10;
    posmayory=a.y+40;
    tamaño[0]=posmenorx;
    tamaño[1]=posmayorx;
    tamaño[2]=posmenory;
    tamaño[3]=posmayory;
    return tamaño;
    
    }
    
                
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logo = new javax.swing.JLabel();
        titulo = new javax.swing.JLabel();
        arranqueNormal = new javax.swing.JButton();
        label3 = new javax.swing.JLabel();
        label1 = new javax.swing.JLabel();
        label4 = new javax.swing.JLabel();
        label5 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        label6 = new javax.swing.JLabel();
        label7 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        label10 = new javax.swing.JLabel();
        label8 = new javax.swing.JLabel();
        label9 = new javax.swing.JLabel();
        label11 = new javax.swing.JLabel();
        label12 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        boton6 = new javax.swing.JButton();
        boton7 = new javax.swing.JButton();
        boton5 = new javax.swing.JButton();
        boton4 = new javax.swing.JButton();
        boton3 = new javax.swing.JButton();
        boton2 = new javax.swing.JButton();
        boton11 = new javax.swing.JButton();
        boton10 = new javax.swing.JButton();
        boton9 = new javax.swing.JButton();
        boton8 = new javax.swing.JButton();
        boton1 = new javax.swing.JButton();
        boton12 = new javax.swing.JButton();
        label13 = new javax.swing.JLabel();
        label14 = new javax.swing.JLabel();
        label15 = new javax.swing.JLabel();
        label16 = new javax.swing.JLabel();
        label17 = new javax.swing.JLabel();
        label18 = new javax.swing.JLabel();
        label19 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        label20 = new javax.swing.JLabel();
        label21 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        label22 = new javax.swing.JLabel();
        label23 = new javax.swing.JLabel();
        label24 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        label26 = new javax.swing.JLabel();
        label27 = new javax.swing.JLabel();
        icono = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Secuencia de Arranque\n");
        setBackground(new java.awt.Color(0, 0, 0));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgdiseño/thumbGRUPO20EPM20CON20CIERRE202013.jpg"))); // NOI18N
        getContentPane().add(logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 50));

        titulo.setBackground(new java.awt.Color(60, 188, 28));
        titulo.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("SECUENCIA DE ARRANQUE");
        titulo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 204, 0), null, null));
        titulo.setOpaque(true);
        getContentPane().add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 830, 50));

        arranqueNormal.setText("SECUENCIA NORMAL");
        arranqueNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arranqueNormalActionPerformed(evt);
            }
        });
        getContentPane().add(arranqueNormal, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, -1));

        label3.setForeground(new java.awt.Color(255, 255, 255));
        label3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 20, 20));

        label1.setForeground(new java.awt.Color(255, 255, 255));
        label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 20, 20));

        label4.setForeground(new java.awt.Color(255, 255, 255));
        label4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 140, 20, 20));

        label5.setForeground(new java.awt.Color(255, 255, 255));
        label5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 180, 20, 20));

        label2.setForeground(new java.awt.Color(255, 255, 255));
        label2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 20, 20));

        label6.setForeground(new java.awt.Color(255, 255, 255));
        label6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 20, 20));

        label7.setForeground(new java.awt.Color(255, 255, 255));
        label7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 20, 20));

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("2");
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jLabel15.setOpaque(true);
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 260, 130, 110));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("1");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 130, 100));

        label10.setForeground(new java.awt.Color(255, 255, 255));
        label10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label10, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 600, 20, 20));

        label8.setForeground(new java.awt.Color(255, 255, 255));
        label8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 430, 20, 20));

        label9.setForeground(new java.awt.Color(255, 255, 255));
        label9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 480, 20, 20));

        label11.setForeground(new java.awt.Color(255, 255, 255));
        label11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label11, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 640, 20, 20));

        label12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label12, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 670, 20, 20));

        jLabel20.setBackground(new java.awt.Color(0, 0, 0));
        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("4");
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jLabel20.setOpaque(true);
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 590, 130, 110));

        jLabel21.setBackground(new java.awt.Color(0, 0, 0));
        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("3");
        jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jLabel21.setOpaque(true);
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 410, 130, 110));

        jButton2.setText("Cerrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 20, -1, -1));

        boton6.setText("FRENOS APLICADOS");
        boton6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton6MouseDragged(evt);
            }
        });
        boton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton6MouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton6MouseReleased(evt);
            }
        });
        getContentPane().add(boton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 200, -1, -1));

        boton7.setText("VALVULA ESFERICA ABIERTA");
        boton7.setFocusable(false);
        boton7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton7MouseDragged(evt);
            }
        });
        boton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton7MouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton7MouseReleased(evt);
            }
        });
        getContentPane().add(boton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 100, -1, -1));

        boton5.setText("FILTRO REFRIGERACION ON");
        boton5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton5MouseDragged(evt);
            }
        });
        boton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton5MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton5MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton5MouseReleased(evt);
            }
        });
        getContentPane().add(boton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 240, -1, -1));

        boton4.setText("JUNTA INFLABLE OPERACION DESAPLICADA");
        boton4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton4MouseDragged(evt);
            }
        });
        boton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton4MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton4MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton4MouseReleased(evt);
            }
        });
        getContentPane().add(boton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 630, -1, -1));

        boton3.setText("VALVULA DE ALIVIO CERRADA");
        boton3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton3MouseDragged(evt);
            }
        });
        boton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton3MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton3MouseReleased(evt);
            }
        });
        getContentPane().add(boton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 150, -1, -1));

        boton2.setText("VALVULA DE AISLAMIENTO ABIERTA");
        boton2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton2MouseDragged(evt);
            }
        });
        boton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton2MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton2MouseReleased(evt);
            }
        });
        getContentPane().add(boton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 290, -1, -1));

        boton11.setText("REGULADOR ENERGIZADO");
        boton11.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton11MouseDragged(evt);
            }
        });
        boton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton11MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                boton11MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton11MouseReleased(evt);
            }
        });
        getContentPane().add(boton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 480, -1, -1));

        boton10.setText("REGULADOR DESBLOQUEADO");
        boton10.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton10MouseDragged(evt);
            }
        });
        boton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton10MouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton10MouseReleased(evt);
            }
        });
        getContentPane().add(boton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 530, -1, -1));

        boton9.setText("LUBRICACION FORZADA ON");
        boton9.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton9MouseDragged(evt);
            }
        });
        boton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton9MouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton9MouseReleased(evt);
            }
        });
        boton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton9ActionPerformed(evt);
            }
        });
        getContentPane().add(boton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 340, -1, -1));

        boton8.setText("FRENOS DESAPLICADOS");
        boton8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boton8.setDefaultCapable(false);
        boton8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton8MouseDragged(evt);
            }
        });
        boton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton8MouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton8MouseReleased(evt);
            }
        });
        getContentPane().add(boton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 390, -1, -1));

        boton1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        boton1.setText("BOMBA DE REFRIGERACION EN OPERACION");
        boton1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton1MouseDragged(evt);
            }
        });
        boton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton1MouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton1MouseReleased(evt);
            }
        });
        getContentPane().add(boton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 430, -1, -1));

        boton12.setText("VELOCIDAD >90%");
        boton12.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                boton12MouseDragged(evt);
            }
        });
        boton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                boton12MouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boton12MouseReleased(evt);
            }
        });
        getContentPane().add(boton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 580, -1, -1));

        label13.setForeground(new java.awt.Color(255, 255, 255));
        label13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label13, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 210, 20, 20));

        label14.setForeground(new java.awt.Color(255, 255, 255));
        label14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label14, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 130, 20, 20));

        label15.setForeground(new java.awt.Color(255, 255, 255));
        label15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label15, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 280, 20, 20));

        label16.setForeground(new java.awt.Color(255, 255, 255));
        label16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label16, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 350, 20, 20));

        label17.setForeground(new java.awt.Color(255, 255, 255));
        label17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label17, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 170, 20, 20));

        label18.setForeground(new java.awt.Color(255, 255, 255));
        label18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label18, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 400, 20, 20));

        label19.setForeground(new java.awt.Color(255, 255, 255));
        label19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label19, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 480, 20, 20));

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("6");
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jLabel16.setOpaque(true);
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 270, 130, 60));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("5");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 140, 130, 70));

        jLabel22.setBackground(new java.awt.Color(0, 0, 0));
        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("9");
        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jLabel22.setOpaque(true);
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 460, 130, 70));

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("7");
        jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jLabel23.setOpaque(true);
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 360, 130, 60));

        label20.setForeground(new java.awt.Color(255, 255, 255));
        label20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label20, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 780, 20, 20));

        label21.setForeground(new java.awt.Color(255, 255, 255));
        label21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label21, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 630, 20, 20));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("10");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 560, 130, 70));

        label22.setForeground(new java.awt.Color(255, 255, 255));
        label22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label22, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 590, 20, 20));

        label23.setForeground(new java.awt.Color(255, 255, 255));
        label23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label23, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 550, 20, 20));

        label24.setForeground(new java.awt.Color(255, 255, 255));
        label24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label24, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 1000, 20, 20));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("11");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jLabel7.setOpaque(true);
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 680, 130, 70));

        label26.setForeground(new java.awt.Color(255, 255, 255));
        label26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label26, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 730, 20, 20));

        label27.setForeground(new java.awt.Color(255, 255, 255));
        label27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(label27, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 690, 20, 20));

        icono.setBackground(new java.awt.Color(153, 212, 94));
        icono.setForeground(new java.awt.Color(255, 255, 255));
        icono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgdiseño/color.png"))); // NOI18N
        icono.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(icono, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1540, 1000));

        pack();
    }// </editor-fold>//GEN-END:initComponents
//boton principal para arrancar la secuencia de arranque
    private void arranqueNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arranqueNormalActionPerformed
       Stack<Integer> numero = generaNumeroAleatorio(170, 700);
        int num0 = numero.get(0);
         boton1.setLocation(1250,ubica[num0]);
          int num1 = numero.get(1);
         boton2.setLocation(1250,ubica[num1]);
           int num2 = numero.get(2);
         boton3.setLocation(1250,ubica[num2]);
           int num3 = numero.get(3);
         boton4.setLocation(1250,ubica[num3]);
           int num4 = numero.get(4);
         boton5.setLocation(1250,ubica[num4]);
           int num5 = numero.get(5);
         boton6.setLocation(1250,ubica[num5]);
           int num6 = numero.get(6);
         boton7.setLocation(1250,ubica[num6]);
           int num7 = numero.get(7);
         boton8.setLocation(1250,ubica[num7]);
           int num8 = numero.get(8);
         boton9.setLocation(1250,ubica[num8]);
           int num9 = numero.get(9);
         boton10.setLocation(1250,ubica[num9]);
           int num10 = numero.get(10);
         boton11.setLocation(1250,ubica[num10]);
           int num11 = numero.get(11);
         boton12.setLocation(1250,ubica[num11]);
         
           location1 = boton1.getLocation();
        location2 = boton2.getLocation();
        location3 = boton3.getLocation();
        location4 = boton4.getLocation();
        location5 = boton5.getLocation();
        location6 = boton6.getLocation();
        location7 = boton7.getLocation();
        location8 = boton8.getLocation();
        location9 = boton9.getLocation();
        location10 = boton10.getLocation();
        location11 = boton11.getLocation();
        location12 = boton12.getLocation();
          
         
         boton1.setEnabled(true);
          boton2.setEnabled(true);
           boton3.setEnabled(true);
            boton4.setEnabled(true);
             boton5.setEnabled(true);
              boton6.setEnabled(true);
               boton7.setEnabled(true);
                boton8.setEnabled(true);
                 boton9.setEnabled(true);
                  boton10.setEnabled(true);
                   boton11.setEnabled(true);
                    boton12.setEnabled(true);
         
         superbande=true;
         
         
         
    }//GEN-LAST:event_arranqueNormalActionPerformed
boolean bande1=true;
    private void boton1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton1MouseDragged
       if(superbande==true){
        if(bande1==true){
            mover(boton1);
            int tam[];
            //ubicacion del puntero en el presiso momento
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton1.getBounds();
            tam=tamaño(label1);
           //valida si la pisicion del boton es igual a la del lugar donde deberia estar
           //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])){
                try {
                    generarsonidowell();
                    contgeneral=contgeneral+1;
                    validarcuantos(contgeneral);
                    boton1.setLocation(tam[1]-a.width-20, tam[3]-a.height-20);
                    System.out.println("correcto");
                    label1.setSize(boton1.getWidth(),boton1.getHeight());
                    label1.setLocation(tam[1]-a.width-20, tam[3]-a.height-20);
                     boton1.setBackground(Color.green);
                    bande1=false;
                    try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //llamado a la ventana de la bomba de refrigeracion
                    BombaRefrigeracion bomba = null;
                    bomba = new BombaRefrigeracion();
                    bomba.setSize(734,494);
                    bomba.setVisible(true);
                    bomba.setLocationRelativeTo(null);
                
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
              }

            }
       }
    }//GEN-LAST:event_boton1MouseDragged
boolean bande2=true;
    private void boton2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton2MouseDragged
          if(superbande==true){
          if(bande2==true){
            mover(boton2);
            int tam[];
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton2.getBounds();
            tam=tamaño(label2);
            //valida si la pisicion del boton es igual a la del lugar donde deberia estar
            //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])){
                  generarsonidowell();
                 contgeneral=contgeneral+1;
                 validarcuantos(contgeneral);
                boton2.setLocation(tam[1]-a.width-20, tam[3]-a.height-20); 
                System.out.println("correcto");
                label2.setSize(boton2.getWidth(),boton2.getHeight());
                label2.setLocation(tam[1]-a.width-20, tam[3]-a.height-20);
                bande2=false;
                boton2.setBackground(Color.green);
                try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   
                    ValvulaAislamiento valvula = null;
                try {
                    valvula = new ValvulaAislamiento();
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
                    valvula.setSize(734,499);
                    valvula.setVisible(true);
                     valvula.setLocationRelativeTo(null);
                    }

            }
          }
    }//GEN-LAST:event_boton2MouseDragged
boolean bande3=true;
    private void boton3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton3MouseDragged
         if(superbande==true){
          if(bande3==true){
            mover(boton3);
            int tam[];
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton3.getBounds();
            tam=tamaño(label3);
            //valida si la pisicion del boton es igual a la del lugar donde deberia estar
            //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])){
                  generarsonidowell();
                 contgeneral=contgeneral+1;
                 validarcuantos(contgeneral);
                boton3.setLocation(tam[1]-a.width-20, tam[3]-a.height-20); 
                System.out.println("correcto");
                label3.setSize(boton3.getWidth(),boton3.getHeight());
                label3.setLocation(tam[1]-a.width-20, tam[3]-a.height-20);
                bande3=false;
                boton3.setBackground(Color.green);
                try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    ValvulaAlivio valvulaA = null;
             
                try {
                    valvulaA = new ValvulaAlivio();
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
                    valvulaA.setSize(734,499);
                    valvulaA.setVisible(true);
                     valvulaA.setLocationRelativeTo(null);
                
                
                    }
            }
         }
    }//GEN-LAST:event_boton3MouseDragged
boolean bande4=true;
    private void boton4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton4MouseDragged
         if(superbande==true){
        if(bande4==true){
            mover(boton4);
            int tam[];
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton4.getBounds();
            tam=tamañoIz(label4);
             //valida si la pisicion del boton es igual a la del lugar donde deberia estar
            //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])){
                generarsonidowell();
                contgeneral=contgeneral+1;
                validarcuantos(contgeneral);
                boton4.setLocation(tam[0], tam[2]-20); 
                System.out.println("correcto");
                label4.setSize(boton4.getWidth(),boton4.getHeight());
                label4.setLocation(tam[0], tam[2]-20);
                bande4=false;
                boton4.setBackground(Color.green);
                try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JuntaInflable junta = null;
             
                try {
                    junta = new JuntaInflable();
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
                    junta.setSize(734,499);
                    junta.setVisible(true);
                     junta.setLocationRelativeTo(null);
                
                    }
        }
      } 
    }//GEN-LAST:event_boton4MouseDragged
boolean bande5=true;
    private void boton5MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton5MouseDragged
        if(superbande==true){
        if(bande5==true){
            mover(boton5);
            int tam[];
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton5.getBounds();
            tam=tamañoIz(label5);
             //valida si la pisicion del boton es igual a la del lugar donde deberia estar
            //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])){
                  generarsonidowell();
                 contgeneral=contgeneral+1;
                 validarcuantos(contgeneral);
                boton5.setLocation(tam[0], tam[2]-20); 
                System.out.println("correcto");
                label5.setSize(boton5.getWidth(),boton5.getHeight());
                label5.setLocation(tam[0], tam[2]-20);
                bande5=false;
                      boton5.setBackground(Color.green);
                try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    filtroAplicado filtro = null;
             
                try {
                    filtro = new filtroAplicado();
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
                    filtro.setSize(649,499);
                    filtro.setVisible(true);
                     filtro.setLocationRelativeTo(null);
                
                    }

            }
        }
    }//GEN-LAST:event_boton5MouseDragged

    private void boton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton2MousePressed
        calcular_diferencia=true;
    }//GEN-LAST:event_boton2MousePressed

    private void boton3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton3MousePressed
       calcular_diferencia=true;
    }//GEN-LAST:event_boton3MousePressed

    private void boton4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton4MousePressed
      calcular_diferencia=true;
    }//GEN-LAST:event_boton4MousePressed

    private void boton5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton5MousePressed
      calcular_diferencia=true;
    }//GEN-LAST:event_boton5MousePressed
boolean bande6=true;
    private void boton6MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton6MouseDragged
         if(superbande==true){
        if(bande6==true){
            mover(boton6);
            
            int tam[];
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton6.getBounds();
            tam=tamaño(label6);
             //valida si la pisicion del boton es igual a la del lugar donde deberia estar
            //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])&&(contgeneral>=5)){
                 generarsonidowell();
                 contgeneral=contgeneral+1;
                 validarcuantos(contgeneral);
                boton6.setLocation(tam[1]-a.width-20, tam[3]-a.height-20); 
                System.out.println("correcto");
                label6.setSize(boton6.getWidth(),boton6.getHeight());
                label6.setLocation(tam[1]-a.width-20, tam[3]-a.height-20);
                bande6=false;
               boton6.setBackground(Color.green);
                try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   
                    filtroAplicado filtro = null;
                try {
                    filtro = new filtroAplicado();
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
                    filtro.setSize(734,499);
                    filtro.setVisible(true);
                     filtro.setLocationRelativeTo(null);
                    }
        }
         }
    }//GEN-LAST:event_boton6MouseDragged
boolean bande7=true;
    private void boton7MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton7MouseDragged
      if(superbande==true){ 
        if(bande7==true){
            mover(boton7);
            
            int tam[];
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton7.getBounds();
            tam=tamaño(label7);
             //valida si la pisicion del boton es igual a la del lugar donde deberia estar
            //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])&&(contgeneral>=5)){
                 generarsonidowell();
                contgeneral=contgeneral+1;
                validarcuantos(contgeneral);
                boton7.setLocation(tam[1]-a.width-20, tam[3]-a.height-20); 
                System.out.println("correcto");
                label7.setSize(boton7.getWidth(),boton7.getHeight());
                label7.setLocation(tam[1]-a.width-20, tam[3]-a.height-20);
                bande7=false;
              boton7.setBackground(Color.green);
                try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   
                    AbrirValvulaEsferica valvulaE = null;
                try {
                    valvulaE = new AbrirValvulaEsferica();
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
                    valvulaE.setSize(734,499);
                    valvulaE.setVisible(true);
                     valvulaE.setLocationRelativeTo(null);
                    }
        

            }
      }
    }//GEN-LAST:event_boton7MouseDragged

    private void boton6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton6MouseReleased
      if(superbande==true){
        if(bande6==true){       
            System.out.println("incorrecto");
            boton6.setLocation(location6);
             //codigo para el cambio de color del boton
             boton6.setBackground(Color.red);
          //codigo para la generacion de el sonido
             Clip sonido = null;
              try {
                  sonido = AudioSystem.getClip();
              } catch (LineUnavailableException ex) {
                  Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
              }
            File a = new File("C:\\Users\\lzambrs\\Documents\\NetBeansProjects\\Epmgudalupe\\src\\sonidos\\Track_No01.wav");
              try {
                  sonido.open(AudioSystem.getAudioInputStream(a));
              } catch (UnsupportedAudioFileException ex) {
                  Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
              } catch (IOException ex) {
                  Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
              } catch (LineUnavailableException ex) {
                  Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
              }
            sonido.start();
            System.out.println("Reproduciendo 10s. de sonido...");
              try {
                  Thread.sleep(1000); // 1000 milisegundos (10 segundos)
              } catch (InterruptedException ex) {
                  Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
              }
            sonido.close();
        }
      }
    }//GEN-LAST:event_boton6MouseReleased

    private void boton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton1MouseReleased
      if(superbande==true){
        if(bande1==true){       
            System.out.println("incorrecto");
            boton1.setLocation(location1);
            boton1.setBackground(Color.red);
            //codigo para la generacion del sonido
            generarsonido();
          
        }
      }
    }//GEN-LAST:event_boton1MouseReleased

    private void boton2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton2MouseReleased
        if(superbande==true){ 
        if(bande2==true){       
            System.out.println("incorrecto");
            boton2.setLocation(location2);
            //codigo para el cambio de color del boton
             boton2.setBackground(Color.red);
          //codigo para la generacion de el sonido
             generarsonido();
        }
        }
    }//GEN-LAST:event_boton2MouseReleased

    private void boton3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton3MouseReleased
        if(superbande==true){   
        if(bande3==true){       
            System.out.println("incorrecto");
            boton3.setLocation(location3);
             //codigo para el cambio de color del boton
             boton3.setBackground(Color.red);
          //codigo para la generacion de el sonido
            generarsonido();
        }
       }
    }//GEN-LAST:event_boton3MouseReleased

    private void boton4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton4MouseReleased
        if(superbande==true){ 
        if(bande4==true){       
            System.out.println("incorrecto");
            boton4.setLocation(location4);
             //codigo para el cambio de color del boton
             boton4.setBackground(Color.red);
          //codigo para la generacion de el sonido
           generarsonido();
        }
        }
    }//GEN-LAST:event_boton4MouseReleased

    private void boton5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton5MouseReleased
         if(superbande==true){  
        if(bande5==true){       
            System.out.println("incorrecto");
            boton5.setLocation(location5);
             //codigo para el cambio de color del boton
             boton5.setBackground(Color.red);
          //codigo para la generacion de el sonido
           generarsonido();
        }
         }
    }//GEN-LAST:event_boton5MouseReleased

    private void boton7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton7MouseReleased
      if(superbande==true){  
        if(bande7==true){       
            System.out.println("incorrecto");
            boton7.setLocation(location7);
             //codigo para el cambio de color del boton
             boton7.setBackground(Color.red);
          //codigo para la generacion de el sonido
          generarsonido();
        }
     }
    }//GEN-LAST:event_boton7MouseReleased
boolean bande8=true;
    private void boton8MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton8MouseDragged
       if(superbande==true){
        if(bande8==true){
            mover(boton8);
            
            int tam[];
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton8.getBounds();
            tam=tamaño(label8);
             //valida si la pisicion del boton es igual a la del lugar donde deberia estar
            //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])&&(contgeneral>=7)){
                 generarsonidowell();
                contgeneral=contgeneral+1;
                validarcuantos(contgeneral);
                boton8.setLocation(tam[1]-a.width-20, tam[3]-a.height-20); 
                System.out.println("correcto");
                label8.setSize(boton8.getWidth(),boton8.getHeight());
                label8.setLocation(tam[1]-a.width-20, tam[3]-a.height-20);
                bande8=false;
                
              boton8.setBackground(Color.green);
                try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   
                    Desaplicarfrenos frenosd = null;
                try {
                    frenosd = new Desaplicarfrenos();
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
                    frenosd.setSize(734,499);
                    frenosd.setVisible(true);
                    frenosd.setLocationRelativeTo(null);
                    }
            }
       }
    }//GEN-LAST:event_boton8MouseDragged

    private void boton8MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton8MouseReleased
      if(superbande==true){
        if(bande8==true){       
            System.out.println("incorrecto");
           
            boton8.setLocation(location8);
             //codigo para el cambio de color del boton
             boton8.setBackground(Color.red);
          //codigo para la generacion de el sonido
             generarsonido();
        }
      }
    }//GEN-LAST:event_boton8MouseReleased
boolean bande9=true;
    private void boton9MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton9MouseDragged
        if(superbande==true){
        if(bande9==true){
            mover(boton9);
            
            int tam[];
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton9.getBounds();
            tam=tamaño(label9);
             //valida si la pisicion del boton es igual a la del lugar donde deberia estar
            //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])&&(contgeneral>=7)){
                 generarsonidowell();
                contgeneral=contgeneral+1;
                validarcuantos(contgeneral);
                boton9.setLocation(tam[1]-a.width-20, tam[3]-a.height-20); 
                System.out.println("correcto");
                label9.setSize(boton9.getWidth(),boton9.getHeight());
                label9.setLocation(tam[1]-a.width-20, tam[3]-a.height-20);
                bande9=false;
                 boton9.setBackground(Color.green);
                try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   
                    LubricacionForzadaOn lubricar = null;
                try {
                    lubricar = new LubricacionForzadaOn();
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
                    lubricar.setSize(734,499);
                    lubricar.setVisible(true);
                     lubricar.setLocationRelativeTo(null);
                    
             }
            }
        }
    }//GEN-LAST:event_boton9MouseDragged

    private void boton9MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton9MouseReleased
        if(superbande==true){   
        if(bande9==true){       
            System.out.println("incorrecto");
            boton9.setLocation(location9);
             //codigo para el cambio de color del boton
             boton9.setBackground(Color.red);
          //codigo para la generacion de el sonido
             generarsonido();
        }
        }
    }//GEN-LAST:event_boton9MouseReleased
boolean bande10=true;
    private void boton10MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton10MouseDragged
      if(superbande==true){  
        if(bande10==true){
            mover(boton10);
            
            int tam[];
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton10.getBounds();
            tam=tamaño(label10);
             //valida si la pisicion del boton es igual a la del lugar donde deberia estar
            //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])&&(contgeneral>=9)){
                 generarsonidowell();
                contgeneral=contgeneral+1;
                validarcuantos(contgeneral);
                boton10.setLocation(tam[1]-a.width-20, tam[3]-a.height-20); 
                System.out.println("correcto");
                label10.setSize(boton10.getWidth(),boton10.getHeight());
                label10.setLocation(tam[1]-a.width-20, tam[3]-a.height-20);
                bande10=false;
                 boton10.setBackground(Color.green);
                try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   
                    ReguladorDesbloqueado reguladordes = null;
                try {
                    reguladordes = new ReguladorDesbloqueado();
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
                    reguladordes.setSize(734,499);
                    reguladordes.setVisible(true);
                    reguladordes.setLocationRelativeTo(null);
                    
             }
            }
      }
    }//GEN-LAST:event_boton10MouseDragged

    private void boton10MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton10MouseReleased
       if(superbande==true){
        if(bande10==true){       
            System.out.println("incorrecto");
            boton10.setLocation(location10);
             //codigo para el cambio de color del boton
             boton10.setBackground(Color.red);
          //codigo para la generacion de el sonido
            generarsonido();
        }
       }
    }//GEN-LAST:event_boton10MouseReleased
boolean bande11=true;
    private void boton11MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton11MouseDragged
         if(superbande==true){
        if(bande11==true){
            mover(boton11);
            
            int tam[];
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton11.getBounds();
            tam=tamaño(label11);
             //valida si la pisicion del boton es igual a la del lugar donde deberia estar
            //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])&&(contgeneral>=9)){
                 generarsonidowell();
                contgeneral=contgeneral+1;
                validarcuantos(contgeneral);
                boton11.setLocation(tam[1]-a.width-20, tam[3]-a.height-20); 
                System.out.println("correcto");
                label11.setSize(boton11.getWidth(),boton11.getHeight());
                label11.setLocation(tam[1]-a.width-20, tam[3]-a.height-20);
                bande11=false;
                 boton11.setBackground(Color.green);
                try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   
                    ReguladorEnergizado reguladorene = null;
                try {
                    reguladorene = new ReguladorEnergizado();
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
                    reguladorene.setSize(734,499);
                    reguladorene.setVisible(true);
                    reguladorene.setLocationRelativeTo(null);
                    
             }
            }
         }
    }//GEN-LAST:event_boton11MouseDragged

    private void boton11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton11MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_boton11MousePressed

    private void boton11MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton11MouseReleased
          if(superbande==true){
        if(bande11==true){       
            System.out.println("incorrecto");
            boton11.setLocation(location11);
             //codigo para el cambio de color del boton
             boton11.setBackground(Color.red);
          //codigo para la generacion de el sonido
           generarsonido();
        }
      }
    }//GEN-LAST:event_boton11MouseReleased
boolean bande12=true;
    private void boton12MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton12MouseDragged
        if(superbande==true){
        if(bande12==true){
            mover(boton12);
            
            int tam[];
            p = MouseInfo.getPointerInfo().getLocation();
            Rectangle a=boton12.getBounds();
            tam=tamaño(label12);
             //valida si la pisicion del boton es igual a la del lugar donde deberia estar
            //si es afirmativo lo ancla a esta posicion de lo contrario cuando deja de dar click da la señal de error
            if((tam[0]<=p.x && p.x <= tam[1])&&(tam[2]<=p.y && p.y <= tam[3])&&(contgeneral>=9)){
                 generarsonidowell();
                contgeneral=contgeneral+1;
                validarcuantos(contgeneral);
                boton12.setLocation(tam[1]-a.width-20, tam[3]-a.height-20); 
                System.out.println("correcto");
                label12.setSize(boton12.getWidth(),boton12.getHeight());
                label12.setLocation(tam[1]-a.width-20, tam[3]-a.height-20);
                bande12=false;
                 boton12.setBackground(Color.green);
                try {
                        Thread.sleep (500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   
                    VelocidadM90 velocidad = null;
                try {
                    velocidad = new VelocidadM90();
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
                    velocidad.setSize(734,499);
                    velocidad.setVisible(true);
                     velocidad.setLocationRelativeTo(null);
                    
             }
            }
        }
    }//GEN-LAST:event_boton12MouseDragged

    private void boton12MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton12MouseReleased
      if(superbande==true){     
    if(bande12==true){       
            System.out.println("incorrecto");
            boton12.setLocation(location12);
             //codigo para el cambio de color del boton
             boton12.setBackground(Color.red);
          //codigo para la generacion de el sonido
           generarsonido();
        }
      }
    }//GEN-LAST:event_boton12MouseReleased

    private void boton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boton9ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void boton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton1MouseEntered
       if(boton1.getBackground()!=green){   
         boton1.setBackground(color);
       }
      
    }//GEN-LAST:event_boton1MouseEntered

    private void boton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton2MouseEntered
       if(boton2.getBackground()!=green){  
        boton2.setBackground(color);
       }
    }//GEN-LAST:event_boton2MouseEntered

    private void boton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton3MouseEntered
     if(boton3.getBackground()!=green){     
        boton3.setBackground(color);
    }
    }//GEN-LAST:event_boton3MouseEntered

    private void boton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton4MouseEntered
     if(boton4.getBackground()!=green){     
        boton4.setBackground(color);    
    }// TODO add your handling code here:
    }//GEN-LAST:event_boton4MouseEntered

    private void boton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton5MouseEntered
       if(boton1.getBackground()!=green){  
           boton5.setBackground(color);
       }
    }//GEN-LAST:event_boton5MouseEntered

    private void boton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton6MouseEntered
        if(boton1.getBackground()!=green){  
            boton6.setBackground(color);
        }
        
    }//GEN-LAST:event_boton6MouseEntered

    private void boton7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton7MouseEntered
        if(boton1.getBackground()!=green){  
            boton7.setBackground(color);
        }
    }//GEN-LAST:event_boton7MouseEntered

    private void boton8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton8MouseEntered
        if(boton1.getBackground()!=green){  
            boton8.setBackground(color);
        }
    }//GEN-LAST:event_boton8MouseEntered

    private void boton9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton9MouseEntered
        if(boton1.getBackground()!=green){  
            boton9.setBackground(color);
        }
    }//GEN-LAST:event_boton9MouseEntered

    private void boton10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton10MouseEntered
        if(boton1.getBackground()!=green){  
            boton10.setBackground(color);
        }
    }//GEN-LAST:event_boton10MouseEntered

    private void boton11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton11MouseEntered
        if(boton1.getBackground()!=green){  
            boton11.setBackground(color);
        }
    }//GEN-LAST:event_boton11MouseEntered

    private void boton12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton12MouseEntered
        if(boton1.getBackground()!=green){  
            boton12.setBackground(color);
        }
    }//GEN-LAST:event_boton12MouseEntered
    
    public void mover(JButton boton){
          
//calculo la posición del ratón y lo guardo en el p
        p = MouseInfo.getPointerInfo().getLocation();
        
        //este if solo se ejecuta al principio de que empiece a mover la etiqueta
        if(calcular_diferencia){
            //calculo la posición de la etiqueta
            pl =boton.getLocation();
            //guardo la diferencia entre la posición del ratón y de la etiqueta
            lx=p.x-pl.x;
            ly=p.y-pl.y;
        }
        //ponemos false el calculo para que no lo vuelva a calcular otra vez
        calcular_diferencia=false;
        
        //cambio la posición de la etiqueta a la posición del ratón menos la diferencia calculada
   boton.setLocation(p.x-lx, p.y-ly);
 }
    public void generarsonido(){
      Clip sonido = null;
                try {
                    sonido = AudioSystem.getClip();
                } catch (LineUnavailableException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
              File a = new File("C:\\Users\\lzambrs\\Documents\\NetBeansProjects\\Epmgudalupe\\src\\sonidos\\Track_No01.wav");
                try {
                    sonido.open(AudioSystem.getAudioInputStream(a));
                } catch (UnsupportedAudioFileException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                } catch (LineUnavailableException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
              sonido.start();
              System.out.println("Reproduciendo 10s. de sonido...");
                try {
                    Thread.sleep(1000); // 1000 milisegundos (10 segundos)
                } catch (InterruptedException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
              sonido.close();
        }
    public void generarsonidowell(){
      Clip sonido = null;
                try {
                    sonido = AudioSystem.getClip();
                } catch (LineUnavailableException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
              File a = new File("C:\\Users\\lzambrs\\Documents\\NetBeansProjects\\Epmgudalupe\\src\\sonidos\\Well.wav");
                try {
                    sonido.open(AudioSystem.getAudioInputStream(a));
                } catch (UnsupportedAudioFileException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                } catch (LineUnavailableException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
              sonido.start();
              System.out.println("Reproduciendo 10s. de sonido...");
                try {
                    Thread.sleep(500); // 1000 milisegundos (10 segundos)
                } catch (InterruptedException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
              sonido.close();
        }
    public void validarcuantos(int p){
        switch(p){
            
            case 5: 
                jLabel4.setBackground(green);
                break;
            case 7:
                jLabel15.setBackground(green);
                break;
            case 9:
                jLabel21.setBackground(green);
                break;
            case 12:
                jLabel20.setBackground(green);
                break;
        }
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton arranqueNormal;
    private javax.swing.JButton boton1;
    private javax.swing.JButton boton10;
    private javax.swing.JButton boton11;
    private javax.swing.JButton boton12;
    private javax.swing.JButton boton2;
    private javax.swing.JButton boton3;
    private javax.swing.JButton boton4;
    private javax.swing.JButton boton5;
    private javax.swing.JButton boton6;
    private javax.swing.JButton boton7;
    private javax.swing.JButton boton8;
    private javax.swing.JButton boton9;
    private javax.swing.JLabel icono;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label10;
    private javax.swing.JLabel label11;
    private javax.swing.JLabel label12;
    private javax.swing.JLabel label13;
    private javax.swing.JLabel label14;
    private javax.swing.JLabel label15;
    private javax.swing.JLabel label16;
    private javax.swing.JLabel label17;
    private javax.swing.JLabel label18;
    private javax.swing.JLabel label19;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label20;
    private javax.swing.JLabel label21;
    private javax.swing.JLabel label22;
    private javax.swing.JLabel label23;
    private javax.swing.JLabel label24;
    private javax.swing.JLabel label26;
    private javax.swing.JLabel label27;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel label4;
    private javax.swing.JLabel label5;
    private javax.swing.JLabel label6;
    private javax.swing.JLabel label7;
    private javax.swing.JLabel label8;
    private javax.swing.JLabel label9;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables

    private void tamaño() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
